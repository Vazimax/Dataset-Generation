{
  "project_cves": {
    "openssl": [],
    "log4j": [
      {
        "cve_id": "CVE-2019-17571",
        "project": "log4j",
        "description": "Included in Log4j 1.2 is a SocketServer class that is vulnerable to deserialization of untrusted data which can be exploited to remotely execute arbitrary code when combined with a deserialization gadget when listening to untrusted network traffic for log data. This affects Log4j versions up to 1.2 up to 1.2.17.",
        "cvss_score": 9.8,
        "severity": "CRITICAL",
        "search_keyword": "log4j deserialization",
        "published_date": "2019-12-20T17:15:11.893",
        "last_modified": "2024-11-21T04:32:33.393",
        "priority": "critical"
      },
      {
        "cve_id": "CVE-2022-23302",
        "project": "log4j",
        "description": "JMSSink in all versions of Log4j 1.x is vulnerable to deserialization of untrusted data when the attacker has write access to the Log4j configuration or if the configuration references an LDAP service the attacker has access to. The attacker can provide a TopicConnectionFactoryBindingName configuration causing JMSSink to perform JNDI requests that result in remote code execution in a similar fashion to CVE-2021-4104. Note this issue only affects Log4j 1.x when specifically configured to use JMSSink, which is not the default. Apache Log4j 1.2 reached end of life in August 2015. Users should upgrade to Log4j 2 as it addresses numerous other issues from the previous versions.",
        "cvss_score": 8.8,
        "severity": "HIGH",
        "search_keyword": "log4j deserialization",
        "published_date": "2022-01-18T16:15:08.300",
        "last_modified": "2025-07-07T18:15:24.713",
        "priority": "critical"
      },
      {
        "cve_id": "CVE-2022-23307",
        "project": "log4j",
        "description": "CVE-2020-9493 identified a deserialization issue that was present in Apache Chainsaw. Prior to Chainsaw V2.0 Chainsaw was a component of Apache Log4j 1.2.x where the same issue exists.",
        "cvss_score": 8.8,
        "severity": "HIGH",
        "search_keyword": "log4j deserialization",
        "published_date": "2022-01-18T16:15:08.403",
        "last_modified": "2024-11-21T06:48:22.733",
        "priority": "critical"
      },
      {
        "cve_id": "CVE-2022-24818",
        "project": "log4j",
        "description": "GeoTools is an open source Java library that provides tools for geospatial data. The GeoTools library has a number of data sources that can perform unchecked JNDI lookups, which in turn can be used to perform class deserialization and result in arbitrary code execution. Similar to the Log4J case, the vulnerability can be triggered if the JNDI names are user-provided, but requires admin-level login to be triggered. The lookups are now restricted in GeoTools 26.4, GeoTools 25.6, and GeoTools 24.6. Users unable to upgrade should ensure that any downstream application should not allow usage of remotely provided JNDI strings.",
        "cvss_score": 8.2,
        "severity": "HIGH",
        "search_keyword": "log4j deserialization",
        "published_date": "2022-04-13T21:15:07.753",
        "last_modified": "2024-11-21T06:51:09.987",
        "priority": "critical"
      }
    ]
  },
  "pattern_cves": {
    "buffer_overflow": [],
    "integer_overflow": []
  },
  "summary": {
    "total_discovered": 4,
    "by_project": {
      "openssl": 0,
      "log4j": 4
    },
    "by_pattern": {
      "buffer_overflow": 0,
      "integer_overflow": 0
    },
    "discovery_date": "2025-08-29T16:59:10.416470",
    "discovery_time": "fast_mode"
  }
}