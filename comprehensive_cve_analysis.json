{
  "summary": {
    "total_cves_analyzed": 10,
    "critical_cves_found": 10,
    "weaponizable_cves_found": 10,
    "target_count": 50,
    "success_rate": "20.0%"
  },
  "critical_cves": [
    {
      "cve_id": "CVE-2014-4959",
      "status": "passed",
      "reason": "Code differences found",
      "weaponization_score": 10.0,
      "is_critical": true,
      "is_weaponizable": true,
      "metadata": {
        "cve_id": "CVE-2014-4959",
        "project": "sqlite",
        "vulnerability_type": "Injection",
        "cvss_score": 9.8,
        "severity": "CRITICAL",
        "description": "**DISPUTED** SQL injection vulnerability in SQLiteDatabase.java in the SQLi Api in Android allows remote attackers to execute arbitrary SQL commands via the delete method.",
        "published_date": "2018-03-27T16:29:00.280",
        "last_modified": "2024-11-21T02:11:10.480",
        "cwe": [
          "CWE-89"
        ],
        "commits": {
          "vulnerable": "9fb13abc6ef9f1a02c99f173a586ed24922c4a46",
          "fixed": "a939a635a2c8f857663ea197be81d19c4a4351d1"
        },
        "extraction_date": "2025-08-31T15:04:34.779881",
        "extraction_status": "completed",
        "extraction_method": "improved"
      },
      "diff_check": {
        "has_differences": true,
        "vulnerable_files": 16,
        "fixed_files": 12,
        "vulnerability_patterns": 495,
        "pattern_breakdown": {
          "buffer_overflow": 24,
          "integer_overflow": 52,
          "null_pointer": 369,
          "use_after_free": 17,
          "sql_injection": 31,
          "format_string": 2
        },
        "reason": "Code differences found"
      },
      "project": "sqlite",
      "cwe_id": "Unknown",
      "cwe_name": "Unknown"
    },
    {
      "cve_id": "CVE-2016-10553",
      "status": "passed",
      "reason": "Code differences found",
      "weaponization_score": 10.0,
      "is_critical": true,
      "is_weaponizable": true,
      "metadata": {
        "cve_id": "CVE-2016-10553",
        "project": "sqlite",
        "vulnerability_type": "Injection",
        "cvss_score": 9.8,
        "severity": "CRITICAL",
        "description": "sequelize is an Object-relational mapping, or a middleman to convert things from Postgres, MySQL, MariaDB, SQLite and Microsoft SQL Server into usable data for NodeJS. A fix was pushed out that fixed potential SQL injection in sequelize 2.1.3 and earlier.",
        "published_date": "2018-05-31T20:29:01.970",
        "last_modified": "2024-11-21T02:44:15.930",
        "cwe": [
          "CWE-89",
          "CWE-89"
        ],
        "commits": {
          "vulnerable": "9fb13abc6ef9f1a02c99f173a586ed24922c4a46",
          "fixed": "a939a635a2c8f857663ea197be81d19c4a4351d1"
        },
        "extraction_date": "2025-08-31T15:04:37.083026",
        "extraction_status": "completed",
        "extraction_method": "improved"
      },
      "diff_check": {
        "has_differences": true,
        "vulnerable_files": 16,
        "fixed_files": 12,
        "vulnerability_patterns": 495,
        "pattern_breakdown": {
          "buffer_overflow": 24,
          "integer_overflow": 52,
          "null_pointer": 369,
          "use_after_free": 17,
          "sql_injection": 31,
          "format_string": 2
        },
        "reason": "Code differences found"
      },
      "project": "sqlite",
      "cwe_id": "Unknown",
      "cwe_name": "Unknown"
    },
    {
      "cve_id": "CVE-2022-37434",
      "status": "passed",
      "reason": "Code differences found",
      "weaponization_score": 10.0,
      "is_critical": true,
      "is_weaponizable": true,
      "metadata": {
        "cve_id": "CVE-2022-37434",
        "project": "zlib",
        "vulnerability_type": "Buffer Overflow",
        "cvss_score": 9.8,
        "severity": "CRITICAL",
        "description": "zlib through 1.2.12 has a heap-based buffer over-read or buffer overflow in inflate in inflate.c via a large gzip header extra field. NOTE: only applications that call inflateGetHeader are affected. Some common applications bundle the affected zlib source code but may be unable to call inflateGetHeader (e.g., see the nodejs/node reference).",
        "published_date": "2022-08-05T07:15:07.240",
        "last_modified": "2025-05-30T20:15:30.030",
        "cwe": [
          "CWE-787",
          "CWE-120"
        ],
        "commits": {
          "vulnerable": "4bd9a71f3539b5ce47f0c67ab5e01f3196dc8ef9",
          "fixed": "7af6320ad78b390de42f414fabdc64dc6d67a5ea"
        },
        "extraction_date": "2025-08-31T15:04:30.613084",
        "extraction_status": "completed",
        "extraction_method": "improved"
      },
      "diff_check": {
        "has_differences": true,
        "vulnerable_files": 11,
        "fixed_files": 11,
        "vulnerability_patterns": 1591,
        "pattern_breakdown": {
          "use_after_free": 29,
          "integer_overflow": 286,
          "format_string": 12,
          "null_pointer": 1189,
          "sql_injection": 65,
          "buffer_overflow": 10
        },
        "reason": "Code differences found"
      },
      "project": "zlib",
      "cwe_id": "Unknown",
      "cwe_name": "Unknown"
    },
    {
      "cve_id": "CVE-2016-7167",
      "status": "passed",
      "reason": "Code differences found",
      "weaponization_score": 10.0,
      "is_critical": true,
      "is_weaponizable": true,
      "metadata": {
        "cve_id": "CVE-2016-7167",
        "project": "curl",
        "vulnerability_type": "Buffer Overflow",
        "cvss_score": 9.8,
        "severity": "CRITICAL",
        "description": "Multiple integer overflows in the (1) curl_escape, (2) curl_easy_escape, (3) curl_unescape, and (4) curl_easy_unescape functions in libcurl before 7.50.3 allow attackers to have unspecified impact via a string of length 0xffffffff, which triggers a heap-based buffer overflow.",
        "published_date": "2016-10-07T14:59:08.100",
        "last_modified": "2025-04-12T10:46:40.837",
        "cwe": [
          "CWE-190"
        ],
        "commits": {
          "vulnerable": "16ddcd6712f58894d30849bfcc0248919f1684ab",
          "fixed": "fa3baabbd81ab9f0aa50bc6335a3e315be0e3009"
        },
        "extraction_date": "2025-08-31T15:04:31.893454",
        "extraction_status": "completed",
        "extraction_method": "improved"
      },
      "diff_check": {
        "has_differences": true,
        "vulnerable_files": 13,
        "fixed_files": 13,
        "vulnerability_patterns": 2070,
        "pattern_breakdown": {
          "buffer_overflow": 6,
          "use_after_free": 80,
          "integer_overflow": 42,
          "format_string": 2,
          "null_pointer": 1934,
          "sql_injection": 6
        },
        "reason": "Code differences found"
      },
      "project": "curl",
      "cwe_id": "Unknown",
      "cwe_name": "Unknown"
    },
    {
      "cve_id": "CVE-2005-0490",
      "status": "passed",
      "reason": "Code differences found",
      "weaponization_score": 10.0,
      "is_critical": true,
      "is_weaponizable": true,
      "metadata": {
        "cve_id": "CVE-2005-0490",
        "project": "curl",
        "vulnerability_type": "Buffer Overflow",
        "cvss_score": 8.8,
        "severity": "HIGH",
        "description": "Multiple stack-based buffer overflows in libcURL and cURL 7.12.1, and possibly other versions, allow remote malicious web servers to execute arbitrary code via base64 encoded replies that exceed the intended buffer lengths when decoded, which is not properly handled by (1) the Curl_input_ntlm function in http_ntlm.c during NTLM authentication or (2) the Curl_krb_kauth and krb4_auth functions in krb4.c during Kerberos authentication.",
        "published_date": "2005-05-02T04:00:00.000",
        "last_modified": "2025-04-03T01:03:51.193",
        "cwe": [
          "CWE-131"
        ],
        "commits": {
          "vulnerable": "16ddcd6712f58894d30849bfcc0248919f1684ab",
          "fixed": "fa3baabbd81ab9f0aa50bc6335a3e315be0e3009"
        },
        "extraction_date": "2025-08-31T15:04:40.070669",
        "extraction_status": "completed",
        "extraction_method": "improved"
      },
      "diff_check": {
        "has_differences": true,
        "vulnerable_files": 13,
        "fixed_files": 13,
        "vulnerability_patterns": 2070,
        "pattern_breakdown": {
          "buffer_overflow": 6,
          "use_after_free": 80,
          "integer_overflow": 42,
          "format_string": 2,
          "null_pointer": 1934,
          "sql_injection": 6
        },
        "reason": "Code differences found"
      },
      "project": "curl",
      "cwe_id": "Unknown",
      "cwe_name": "Unknown"
    },
    {
      "cve_id": "CVE-2016-7134",
      "status": "passed",
      "reason": "Code differences found",
      "weaponization_score": 10.0,
      "is_critical": true,
      "is_weaponizable": true,
      "metadata": {
        "cve_id": "CVE-2016-7134",
        "project": "curl",
        "vulnerability_type": "Buffer Overflow",
        "cvss_score": 9.8,
        "severity": "CRITICAL",
        "description": "ext/curl/interface.c in PHP 7.x before 7.0.10 does not work around a libcurl integer overflow, which allows remote attackers to cause a denial of service (allocation error and heap-based buffer overflow) or possibly have unspecified other impact via a long string that is mishandled in a curl_escape call.",
        "published_date": "2016-09-12T01:59:12.803",
        "last_modified": "2025-04-12T10:46:40.837",
        "cwe": [
          "CWE-119"
        ],
        "commits": {
          "vulnerable": "16ddcd6712f58894d30849bfcc0248919f1684ab",
          "fixed": "fa3baabbd81ab9f0aa50bc6335a3e315be0e3009"
        },
        "extraction_date": "2025-08-31T15:04:31.460843",
        "extraction_status": "completed",
        "extraction_method": "improved"
      },
      "diff_check": {
        "has_differences": true,
        "vulnerable_files": 13,
        "fixed_files": 13,
        "vulnerability_patterns": 2070,
        "pattern_breakdown": {
          "buffer_overflow": 6,
          "use_after_free": 80,
          "integer_overflow": 42,
          "format_string": 2,
          "null_pointer": 1934,
          "sql_injection": 6
        },
        "reason": "Code differences found"
      },
      "project": "curl",
      "cwe_id": "Unknown",
      "cwe_name": "Unknown"
    },
    {
      "cve_id": "CVE-2023-45853",
      "status": "passed",
      "reason": "Code differences found",
      "weaponization_score": 10.0,
      "is_critical": true,
      "is_weaponizable": true,
      "metadata": {
        "cve_id": "CVE-2023-45853",
        "project": "zlib",
        "vulnerability_type": "Buffer Overflow",
        "cvss_score": 9.8,
        "severity": "CRITICAL",
        "description": "MiniZip in zlib through 1.3 has an integer overflow and resultant heap-based buffer overflow in zipOpenNewFileInZip4_64 via a long filename, comment, or extra field. NOTE: MiniZip is not a supported part of the zlib product. NOTE: pyminizip through 0.2.6 is also vulnerable because it bundles an affected zlib version, and exposes the applicable MiniZip code through its compress API.",
        "published_date": "2023-10-14T02:15:09.323",
        "last_modified": "2024-12-20T17:41:31.237",
        "cwe": [
          "CWE-190",
          "CWE-190"
        ],
        "commits": {
          "vulnerable": "4bd9a71f3539b5ce47f0c67ab5e01f3196dc8ef9",
          "fixed": "7af6320ad78b390de42f414fabdc64dc6d67a5ea"
        },
        "extraction_date": "2025-08-31T15:04:30.827934",
        "extraction_status": "completed",
        "extraction_method": "improved"
      },
      "diff_check": {
        "has_differences": true,
        "vulnerable_files": 11,
        "fixed_files": 11,
        "vulnerability_patterns": 1591,
        "pattern_breakdown": {
          "use_after_free": 29,
          "integer_overflow": 286,
          "format_string": 12,
          "null_pointer": 1189,
          "sql_injection": 65,
          "buffer_overflow": 10
        },
        "reason": "Code differences found"
      },
      "project": "zlib",
      "cwe_id": "Unknown",
      "cwe_name": "Unknown"
    },
    {
      "cve_id": "CVE-2016-6303",
      "status": "passed",
      "reason": "Code differences found",
      "weaponization_score": 9.0,
      "is_critical": true,
      "is_weaponizable": true,
      "metadata": {
        "cve_id": "CVE-2016-6303",
        "project": "openssl",
        "vulnerability_type": "Integer Overflow",
        "cvss_score": 9.8,
        "severity": "CRITICAL",
        "description": "Integer overflow in the MDC2_Update function in crypto/mdc2/mdc2dgst.c in OpenSSL before 1.1.0 allows remote attackers to cause a denial of service (out-of-bounds write and application crash) or possibly have unspecified other impact via unknown vectors.",
        "published_date": "2016-09-16T05:59:13.363",
        "last_modified": "2025-04-12T10:46:40.837",
        "cwe": [
          "CWE-787"
        ],
        "commits": {
          "vulnerable": "91de3e1952782fc0a4b893b3cef3c7d4ca1b098f",
          "fixed": "0b00e23df82af08ba04f482745bd7ddbff2da34b"
        },
        "extraction_date": "2025-08-31T15:04:24.551910",
        "extraction_status": "completed",
        "extraction_method": "improved"
      },
      "diff_check": {
        "has_differences": true,
        "vulnerable_files": 19,
        "fixed_files": 12,
        "vulnerability_patterns": 89,
        "pattern_breakdown": {
          "integer_overflow": 1,
          "null_pointer": 88
        },
        "reason": "Code differences found"
      },
      "project": "openssl",
      "cwe_id": "Unknown",
      "cwe_name": "Unknown"
    },
    {
      "cve_id": "CVE-2023-35784",
      "status": "passed",
      "reason": "Code differences found",
      "weaponization_score": 9.0,
      "is_critical": true,
      "is_weaponizable": true,
      "metadata": {
        "cve_id": "CVE-2023-35784",
        "project": "openssl",
        "vulnerability_type": "Use After Free",
        "cvss_score": 9.8,
        "severity": "CRITICAL",
        "description": "A double free or use after free could occur after SSL_clear in OpenBSD 7.2 before errata 026 and 7.3 before errata 004, and in LibreSSL before 3.6.3 and 3.7.x before 3.7.3. NOTE: OpenSSL is not affected.",
        "published_date": "2023-06-16T20:15:09.493",
        "last_modified": "2024-11-21T08:08:41.820",
        "cwe": [
          "CWE-415",
          "CWE-416"
        ],
        "commits": {
          "vulnerable": "91de3e1952782fc0a4b893b3cef3c7d4ca1b098f",
          "fixed": "0b00e23df82af08ba04f482745bd7ddbff2da34b"
        },
        "extraction_date": "2025-08-31T15:04:29.659741",
        "extraction_status": "completed",
        "extraction_method": "improved"
      },
      "diff_check": {
        "has_differences": true,
        "vulnerable_files": 17,
        "fixed_files": 12,
        "vulnerability_patterns": 89,
        "pattern_breakdown": {
          "integer_overflow": 1,
          "null_pointer": 88
        },
        "reason": "Code differences found"
      },
      "project": "openssl",
      "cwe_id": "Unknown",
      "cwe_name": "Unknown"
    },
    {
      "cve_id": "CVE-2020-28018",
      "status": "passed",
      "reason": "Code differences found",
      "weaponization_score": 9.0,
      "is_critical": true,
      "is_weaponizable": true,
      "metadata": {
        "cve_id": "CVE-2020-28018",
        "project": "openssl",
        "vulnerability_type": "Use After Free",
        "cvss_score": 9.8,
        "severity": "CRITICAL",
        "description": "Exim 4 before 4.94.2 allows Use After Free in smtp_reset in certain situations that may be common for builds with OpenSSL.",
        "published_date": "2021-05-06T13:15:09.560",
        "last_modified": "2024-11-21T05:22:12.890",
        "cwe": [
          "CWE-416"
        ],
        "commits": {
          "vulnerable": "91de3e1952782fc0a4b893b3cef3c7d4ca1b098f",
          "fixed": "0b00e23df82af08ba04f482745bd7ddbff2da34b"
        },
        "extraction_date": "2025-08-31T15:04:27.158480",
        "extraction_status": "completed",
        "extraction_method": "improved"
      },
      "diff_check": {
        "has_differences": true,
        "vulnerable_files": 17,
        "fixed_files": 12,
        "vulnerability_patterns": 89,
        "pattern_breakdown": {
          "integer_overflow": 1,
          "null_pointer": 88
        },
        "reason": "Code differences found"
      },
      "project": "openssl",
      "cwe_id": "Unknown",
      "cwe_name": "Unknown"
    }
  ],
  "weaponizable_cves": [
    {
      "cve_id": "CVE-2014-4959",
      "status": "passed",
      "reason": "Code differences found",
      "weaponization_score": 10.0,
      "is_critical": true,
      "is_weaponizable": true,
      "metadata": {
        "cve_id": "CVE-2014-4959",
        "project": "sqlite",
        "vulnerability_type": "Injection",
        "cvss_score": 9.8,
        "severity": "CRITICAL",
        "description": "**DISPUTED** SQL injection vulnerability in SQLiteDatabase.java in the SQLi Api in Android allows remote attackers to execute arbitrary SQL commands via the delete method.",
        "published_date": "2018-03-27T16:29:00.280",
        "last_modified": "2024-11-21T02:11:10.480",
        "cwe": [
          "CWE-89"
        ],
        "commits": {
          "vulnerable": "9fb13abc6ef9f1a02c99f173a586ed24922c4a46",
          "fixed": "a939a635a2c8f857663ea197be81d19c4a4351d1"
        },
        "extraction_date": "2025-08-31T15:04:34.779881",
        "extraction_status": "completed",
        "extraction_method": "improved"
      },
      "diff_check": {
        "has_differences": true,
        "vulnerable_files": 16,
        "fixed_files": 12,
        "vulnerability_patterns": 495,
        "pattern_breakdown": {
          "buffer_overflow": 24,
          "integer_overflow": 52,
          "null_pointer": 369,
          "use_after_free": 17,
          "sql_injection": 31,
          "format_string": 2
        },
        "reason": "Code differences found"
      },
      "project": "sqlite",
      "cwe_id": "Unknown",
      "cwe_name": "Unknown"
    },
    {
      "cve_id": "CVE-2016-10553",
      "status": "passed",
      "reason": "Code differences found",
      "weaponization_score": 10.0,
      "is_critical": true,
      "is_weaponizable": true,
      "metadata": {
        "cve_id": "CVE-2016-10553",
        "project": "sqlite",
        "vulnerability_type": "Injection",
        "cvss_score": 9.8,
        "severity": "CRITICAL",
        "description": "sequelize is an Object-relational mapping, or a middleman to convert things from Postgres, MySQL, MariaDB, SQLite and Microsoft SQL Server into usable data for NodeJS. A fix was pushed out that fixed potential SQL injection in sequelize 2.1.3 and earlier.",
        "published_date": "2018-05-31T20:29:01.970",
        "last_modified": "2024-11-21T02:44:15.930",
        "cwe": [
          "CWE-89",
          "CWE-89"
        ],
        "commits": {
          "vulnerable": "9fb13abc6ef9f1a02c99f173a586ed24922c4a46",
          "fixed": "a939a635a2c8f857663ea197be81d19c4a4351d1"
        },
        "extraction_date": "2025-08-31T15:04:37.083026",
        "extraction_status": "completed",
        "extraction_method": "improved"
      },
      "diff_check": {
        "has_differences": true,
        "vulnerable_files": 16,
        "fixed_files": 12,
        "vulnerability_patterns": 495,
        "pattern_breakdown": {
          "buffer_overflow": 24,
          "integer_overflow": 52,
          "null_pointer": 369,
          "use_after_free": 17,
          "sql_injection": 31,
          "format_string": 2
        },
        "reason": "Code differences found"
      },
      "project": "sqlite",
      "cwe_id": "Unknown",
      "cwe_name": "Unknown"
    },
    {
      "cve_id": "CVE-2022-37434",
      "status": "passed",
      "reason": "Code differences found",
      "weaponization_score": 10.0,
      "is_critical": true,
      "is_weaponizable": true,
      "metadata": {
        "cve_id": "CVE-2022-37434",
        "project": "zlib",
        "vulnerability_type": "Buffer Overflow",
        "cvss_score": 9.8,
        "severity": "CRITICAL",
        "description": "zlib through 1.2.12 has a heap-based buffer over-read or buffer overflow in inflate in inflate.c via a large gzip header extra field. NOTE: only applications that call inflateGetHeader are affected. Some common applications bundle the affected zlib source code but may be unable to call inflateGetHeader (e.g., see the nodejs/node reference).",
        "published_date": "2022-08-05T07:15:07.240",
        "last_modified": "2025-05-30T20:15:30.030",
        "cwe": [
          "CWE-787",
          "CWE-120"
        ],
        "commits": {
          "vulnerable": "4bd9a71f3539b5ce47f0c67ab5e01f3196dc8ef9",
          "fixed": "7af6320ad78b390de42f414fabdc64dc6d67a5ea"
        },
        "extraction_date": "2025-08-31T15:04:30.613084",
        "extraction_status": "completed",
        "extraction_method": "improved"
      },
      "diff_check": {
        "has_differences": true,
        "vulnerable_files": 11,
        "fixed_files": 11,
        "vulnerability_patterns": 1591,
        "pattern_breakdown": {
          "use_after_free": 29,
          "integer_overflow": 286,
          "format_string": 12,
          "null_pointer": 1189,
          "sql_injection": 65,
          "buffer_overflow": 10
        },
        "reason": "Code differences found"
      },
      "project": "zlib",
      "cwe_id": "Unknown",
      "cwe_name": "Unknown"
    },
    {
      "cve_id": "CVE-2016-7167",
      "status": "passed",
      "reason": "Code differences found",
      "weaponization_score": 10.0,
      "is_critical": true,
      "is_weaponizable": true,
      "metadata": {
        "cve_id": "CVE-2016-7167",
        "project": "curl",
        "vulnerability_type": "Buffer Overflow",
        "cvss_score": 9.8,
        "severity": "CRITICAL",
        "description": "Multiple integer overflows in the (1) curl_escape, (2) curl_easy_escape, (3) curl_unescape, and (4) curl_easy_unescape functions in libcurl before 7.50.3 allow attackers to have unspecified impact via a string of length 0xffffffff, which triggers a heap-based buffer overflow.",
        "published_date": "2016-10-07T14:59:08.100",
        "last_modified": "2025-04-12T10:46:40.837",
        "cwe": [
          "CWE-190"
        ],
        "commits": {
          "vulnerable": "16ddcd6712f58894d30849bfcc0248919f1684ab",
          "fixed": "fa3baabbd81ab9f0aa50bc6335a3e315be0e3009"
        },
        "extraction_date": "2025-08-31T15:04:31.893454",
        "extraction_status": "completed",
        "extraction_method": "improved"
      },
      "diff_check": {
        "has_differences": true,
        "vulnerable_files": 13,
        "fixed_files": 13,
        "vulnerability_patterns": 2070,
        "pattern_breakdown": {
          "buffer_overflow": 6,
          "use_after_free": 80,
          "integer_overflow": 42,
          "format_string": 2,
          "null_pointer": 1934,
          "sql_injection": 6
        },
        "reason": "Code differences found"
      },
      "project": "curl",
      "cwe_id": "Unknown",
      "cwe_name": "Unknown"
    },
    {
      "cve_id": "CVE-2005-0490",
      "status": "passed",
      "reason": "Code differences found",
      "weaponization_score": 10.0,
      "is_critical": true,
      "is_weaponizable": true,
      "metadata": {
        "cve_id": "CVE-2005-0490",
        "project": "curl",
        "vulnerability_type": "Buffer Overflow",
        "cvss_score": 8.8,
        "severity": "HIGH",
        "description": "Multiple stack-based buffer overflows in libcURL and cURL 7.12.1, and possibly other versions, allow remote malicious web servers to execute arbitrary code via base64 encoded replies that exceed the intended buffer lengths when decoded, which is not properly handled by (1) the Curl_input_ntlm function in http_ntlm.c during NTLM authentication or (2) the Curl_krb_kauth and krb4_auth functions in krb4.c during Kerberos authentication.",
        "published_date": "2005-05-02T04:00:00.000",
        "last_modified": "2025-04-03T01:03:51.193",
        "cwe": [
          "CWE-131"
        ],
        "commits": {
          "vulnerable": "16ddcd6712f58894d30849bfcc0248919f1684ab",
          "fixed": "fa3baabbd81ab9f0aa50bc6335a3e315be0e3009"
        },
        "extraction_date": "2025-08-31T15:04:40.070669",
        "extraction_status": "completed",
        "extraction_method": "improved"
      },
      "diff_check": {
        "has_differences": true,
        "vulnerable_files": 13,
        "fixed_files": 13,
        "vulnerability_patterns": 2070,
        "pattern_breakdown": {
          "buffer_overflow": 6,
          "use_after_free": 80,
          "integer_overflow": 42,
          "format_string": 2,
          "null_pointer": 1934,
          "sql_injection": 6
        },
        "reason": "Code differences found"
      },
      "project": "curl",
      "cwe_id": "Unknown",
      "cwe_name": "Unknown"
    },
    {
      "cve_id": "CVE-2016-7134",
      "status": "passed",
      "reason": "Code differences found",
      "weaponization_score": 10.0,
      "is_critical": true,
      "is_weaponizable": true,
      "metadata": {
        "cve_id": "CVE-2016-7134",
        "project": "curl",
        "vulnerability_type": "Buffer Overflow",
        "cvss_score": 9.8,
        "severity": "CRITICAL",
        "description": "ext/curl/interface.c in PHP 7.x before 7.0.10 does not work around a libcurl integer overflow, which allows remote attackers to cause a denial of service (allocation error and heap-based buffer overflow) or possibly have unspecified other impact via a long string that is mishandled in a curl_escape call.",
        "published_date": "2016-09-12T01:59:12.803",
        "last_modified": "2025-04-12T10:46:40.837",
        "cwe": [
          "CWE-119"
        ],
        "commits": {
          "vulnerable": "16ddcd6712f58894d30849bfcc0248919f1684ab",
          "fixed": "fa3baabbd81ab9f0aa50bc6335a3e315be0e3009"
        },
        "extraction_date": "2025-08-31T15:04:31.460843",
        "extraction_status": "completed",
        "extraction_method": "improved"
      },
      "diff_check": {
        "has_differences": true,
        "vulnerable_files": 13,
        "fixed_files": 13,
        "vulnerability_patterns": 2070,
        "pattern_breakdown": {
          "buffer_overflow": 6,
          "use_after_free": 80,
          "integer_overflow": 42,
          "format_string": 2,
          "null_pointer": 1934,
          "sql_injection": 6
        },
        "reason": "Code differences found"
      },
      "project": "curl",
      "cwe_id": "Unknown",
      "cwe_name": "Unknown"
    },
    {
      "cve_id": "CVE-2023-45853",
      "status": "passed",
      "reason": "Code differences found",
      "weaponization_score": 10.0,
      "is_critical": true,
      "is_weaponizable": true,
      "metadata": {
        "cve_id": "CVE-2023-45853",
        "project": "zlib",
        "vulnerability_type": "Buffer Overflow",
        "cvss_score": 9.8,
        "severity": "CRITICAL",
        "description": "MiniZip in zlib through 1.3 has an integer overflow and resultant heap-based buffer overflow in zipOpenNewFileInZip4_64 via a long filename, comment, or extra field. NOTE: MiniZip is not a supported part of the zlib product. NOTE: pyminizip through 0.2.6 is also vulnerable because it bundles an affected zlib version, and exposes the applicable MiniZip code through its compress API.",
        "published_date": "2023-10-14T02:15:09.323",
        "last_modified": "2024-12-20T17:41:31.237",
        "cwe": [
          "CWE-190",
          "CWE-190"
        ],
        "commits": {
          "vulnerable": "4bd9a71f3539b5ce47f0c67ab5e01f3196dc8ef9",
          "fixed": "7af6320ad78b390de42f414fabdc64dc6d67a5ea"
        },
        "extraction_date": "2025-08-31T15:04:30.827934",
        "extraction_status": "completed",
        "extraction_method": "improved"
      },
      "diff_check": {
        "has_differences": true,
        "vulnerable_files": 11,
        "fixed_files": 11,
        "vulnerability_patterns": 1591,
        "pattern_breakdown": {
          "use_after_free": 29,
          "integer_overflow": 286,
          "format_string": 12,
          "null_pointer": 1189,
          "sql_injection": 65,
          "buffer_overflow": 10
        },
        "reason": "Code differences found"
      },
      "project": "zlib",
      "cwe_id": "Unknown",
      "cwe_name": "Unknown"
    },
    {
      "cve_id": "CVE-2016-6303",
      "status": "passed",
      "reason": "Code differences found",
      "weaponization_score": 9.0,
      "is_critical": true,
      "is_weaponizable": true,
      "metadata": {
        "cve_id": "CVE-2016-6303",
        "project": "openssl",
        "vulnerability_type": "Integer Overflow",
        "cvss_score": 9.8,
        "severity": "CRITICAL",
        "description": "Integer overflow in the MDC2_Update function in crypto/mdc2/mdc2dgst.c in OpenSSL before 1.1.0 allows remote attackers to cause a denial of service (out-of-bounds write and application crash) or possibly have unspecified other impact via unknown vectors.",
        "published_date": "2016-09-16T05:59:13.363",
        "last_modified": "2025-04-12T10:46:40.837",
        "cwe": [
          "CWE-787"
        ],
        "commits": {
          "vulnerable": "91de3e1952782fc0a4b893b3cef3c7d4ca1b098f",
          "fixed": "0b00e23df82af08ba04f482745bd7ddbff2da34b"
        },
        "extraction_date": "2025-08-31T15:04:24.551910",
        "extraction_status": "completed",
        "extraction_method": "improved"
      },
      "diff_check": {
        "has_differences": true,
        "vulnerable_files": 19,
        "fixed_files": 12,
        "vulnerability_patterns": 89,
        "pattern_breakdown": {
          "integer_overflow": 1,
          "null_pointer": 88
        },
        "reason": "Code differences found"
      },
      "project": "openssl",
      "cwe_id": "Unknown",
      "cwe_name": "Unknown"
    },
    {
      "cve_id": "CVE-2023-35784",
      "status": "passed",
      "reason": "Code differences found",
      "weaponization_score": 9.0,
      "is_critical": true,
      "is_weaponizable": true,
      "metadata": {
        "cve_id": "CVE-2023-35784",
        "project": "openssl",
        "vulnerability_type": "Use After Free",
        "cvss_score": 9.8,
        "severity": "CRITICAL",
        "description": "A double free or use after free could occur after SSL_clear in OpenBSD 7.2 before errata 026 and 7.3 before errata 004, and in LibreSSL before 3.6.3 and 3.7.x before 3.7.3. NOTE: OpenSSL is not affected.",
        "published_date": "2023-06-16T20:15:09.493",
        "last_modified": "2024-11-21T08:08:41.820",
        "cwe": [
          "CWE-415",
          "CWE-416"
        ],
        "commits": {
          "vulnerable": "91de3e1952782fc0a4b893b3cef3c7d4ca1b098f",
          "fixed": "0b00e23df82af08ba04f482745bd7ddbff2da34b"
        },
        "extraction_date": "2025-08-31T15:04:29.659741",
        "extraction_status": "completed",
        "extraction_method": "improved"
      },
      "diff_check": {
        "has_differences": true,
        "vulnerable_files": 17,
        "fixed_files": 12,
        "vulnerability_patterns": 89,
        "pattern_breakdown": {
          "integer_overflow": 1,
          "null_pointer": 88
        },
        "reason": "Code differences found"
      },
      "project": "openssl",
      "cwe_id": "Unknown",
      "cwe_name": "Unknown"
    },
    {
      "cve_id": "CVE-2020-28018",
      "status": "passed",
      "reason": "Code differences found",
      "weaponization_score": 9.0,
      "is_critical": true,
      "is_weaponizable": true,
      "metadata": {
        "cve_id": "CVE-2020-28018",
        "project": "openssl",
        "vulnerability_type": "Use After Free",
        "cvss_score": 9.8,
        "severity": "CRITICAL",
        "description": "Exim 4 before 4.94.2 allows Use After Free in smtp_reset in certain situations that may be common for builds with OpenSSL.",
        "published_date": "2021-05-06T13:15:09.560",
        "last_modified": "2024-11-21T05:22:12.890",
        "cwe": [
          "CWE-416"
        ],
        "commits": {
          "vulnerable": "91de3e1952782fc0a4b893b3cef3c7d4ca1b098f",
          "fixed": "0b00e23df82af08ba04f482745bd7ddbff2da34b"
        },
        "extraction_date": "2025-08-31T15:04:27.158480",
        "extraction_status": "completed",
        "extraction_method": "improved"
      },
      "diff_check": {
        "has_differences": true,
        "vulnerable_files": 17,
        "fixed_files": 12,
        "vulnerability_patterns": 89,
        "pattern_breakdown": {
          "integer_overflow": 1,
          "null_pointer": 88
        },
        "reason": "Code differences found"
      },
      "project": "openssl",
      "cwe_id": "Unknown",
      "cwe_name": "Unknown"
    }
  ],
  "all_cves": [
    {
      "cve_id": "CVE-2014-4959",
      "status": "passed",
      "reason": "Code differences found",
      "weaponization_score": 10.0,
      "is_critical": true,
      "is_weaponizable": true,
      "metadata": {
        "cve_id": "CVE-2014-4959",
        "project": "sqlite",
        "vulnerability_type": "Injection",
        "cvss_score": 9.8,
        "severity": "CRITICAL",
        "description": "**DISPUTED** SQL injection vulnerability in SQLiteDatabase.java in the SQLi Api in Android allows remote attackers to execute arbitrary SQL commands via the delete method.",
        "published_date": "2018-03-27T16:29:00.280",
        "last_modified": "2024-11-21T02:11:10.480",
        "cwe": [
          "CWE-89"
        ],
        "commits": {
          "vulnerable": "9fb13abc6ef9f1a02c99f173a586ed24922c4a46",
          "fixed": "a939a635a2c8f857663ea197be81d19c4a4351d1"
        },
        "extraction_date": "2025-08-31T15:04:34.779881",
        "extraction_status": "completed",
        "extraction_method": "improved"
      },
      "diff_check": {
        "has_differences": true,
        "vulnerable_files": 16,
        "fixed_files": 12,
        "vulnerability_patterns": 495,
        "pattern_breakdown": {
          "buffer_overflow": 24,
          "integer_overflow": 52,
          "null_pointer": 369,
          "use_after_free": 17,
          "sql_injection": 31,
          "format_string": 2
        },
        "reason": "Code differences found"
      },
      "project": "sqlite",
      "cwe_id": "Unknown",
      "cwe_name": "Unknown"
    },
    {
      "cve_id": "CVE-2016-6303",
      "status": "passed",
      "reason": "Code differences found",
      "weaponization_score": 9.0,
      "is_critical": true,
      "is_weaponizable": true,
      "metadata": {
        "cve_id": "CVE-2016-6303",
        "project": "openssl",
        "vulnerability_type": "Integer Overflow",
        "cvss_score": 9.8,
        "severity": "CRITICAL",
        "description": "Integer overflow in the MDC2_Update function in crypto/mdc2/mdc2dgst.c in OpenSSL before 1.1.0 allows remote attackers to cause a denial of service (out-of-bounds write and application crash) or possibly have unspecified other impact via unknown vectors.",
        "published_date": "2016-09-16T05:59:13.363",
        "last_modified": "2025-04-12T10:46:40.837",
        "cwe": [
          "CWE-787"
        ],
        "commits": {
          "vulnerable": "91de3e1952782fc0a4b893b3cef3c7d4ca1b098f",
          "fixed": "0b00e23df82af08ba04f482745bd7ddbff2da34b"
        },
        "extraction_date": "2025-08-31T15:04:24.551910",
        "extraction_status": "completed",
        "extraction_method": "improved"
      },
      "diff_check": {
        "has_differences": true,
        "vulnerable_files": 19,
        "fixed_files": 12,
        "vulnerability_patterns": 89,
        "pattern_breakdown": {
          "integer_overflow": 1,
          "null_pointer": 88
        },
        "reason": "Code differences found"
      },
      "project": "openssl",
      "cwe_id": "Unknown",
      "cwe_name": "Unknown"
    },
    {
      "cve_id": "CVE-2023-35784",
      "status": "passed",
      "reason": "Code differences found",
      "weaponization_score": 9.0,
      "is_critical": true,
      "is_weaponizable": true,
      "metadata": {
        "cve_id": "CVE-2023-35784",
        "project": "openssl",
        "vulnerability_type": "Use After Free",
        "cvss_score": 9.8,
        "severity": "CRITICAL",
        "description": "A double free or use after free could occur after SSL_clear in OpenBSD 7.2 before errata 026 and 7.3 before errata 004, and in LibreSSL before 3.6.3 and 3.7.x before 3.7.3. NOTE: OpenSSL is not affected.",
        "published_date": "2023-06-16T20:15:09.493",
        "last_modified": "2024-11-21T08:08:41.820",
        "cwe": [
          "CWE-415",
          "CWE-416"
        ],
        "commits": {
          "vulnerable": "91de3e1952782fc0a4b893b3cef3c7d4ca1b098f",
          "fixed": "0b00e23df82af08ba04f482745bd7ddbff2da34b"
        },
        "extraction_date": "2025-08-31T15:04:29.659741",
        "extraction_status": "completed",
        "extraction_method": "improved"
      },
      "diff_check": {
        "has_differences": true,
        "vulnerable_files": 17,
        "fixed_files": 12,
        "vulnerability_patterns": 89,
        "pattern_breakdown": {
          "integer_overflow": 1,
          "null_pointer": 88
        },
        "reason": "Code differences found"
      },
      "project": "openssl",
      "cwe_id": "Unknown",
      "cwe_name": "Unknown"
    },
    {
      "cve_id": "CVE-2016-10553",
      "status": "passed",
      "reason": "Code differences found",
      "weaponization_score": 10.0,
      "is_critical": true,
      "is_weaponizable": true,
      "metadata": {
        "cve_id": "CVE-2016-10553",
        "project": "sqlite",
        "vulnerability_type": "Injection",
        "cvss_score": 9.8,
        "severity": "CRITICAL",
        "description": "sequelize is an Object-relational mapping, or a middleman to convert things from Postgres, MySQL, MariaDB, SQLite and Microsoft SQL Server into usable data for NodeJS. A fix was pushed out that fixed potential SQL injection in sequelize 2.1.3 and earlier.",
        "published_date": "2018-05-31T20:29:01.970",
        "last_modified": "2024-11-21T02:44:15.930",
        "cwe": [
          "CWE-89",
          "CWE-89"
        ],
        "commits": {
          "vulnerable": "9fb13abc6ef9f1a02c99f173a586ed24922c4a46",
          "fixed": "a939a635a2c8f857663ea197be81d19c4a4351d1"
        },
        "extraction_date": "2025-08-31T15:04:37.083026",
        "extraction_status": "completed",
        "extraction_method": "improved"
      },
      "diff_check": {
        "has_differences": true,
        "vulnerable_files": 16,
        "fixed_files": 12,
        "vulnerability_patterns": 495,
        "pattern_breakdown": {
          "buffer_overflow": 24,
          "integer_overflow": 52,
          "null_pointer": 369,
          "use_after_free": 17,
          "sql_injection": 31,
          "format_string": 2
        },
        "reason": "Code differences found"
      },
      "project": "sqlite",
      "cwe_id": "Unknown",
      "cwe_name": "Unknown"
    },
    {
      "cve_id": "CVE-2020-28018",
      "status": "passed",
      "reason": "Code differences found",
      "weaponization_score": 9.0,
      "is_critical": true,
      "is_weaponizable": true,
      "metadata": {
        "cve_id": "CVE-2020-28018",
        "project": "openssl",
        "vulnerability_type": "Use After Free",
        "cvss_score": 9.8,
        "severity": "CRITICAL",
        "description": "Exim 4 before 4.94.2 allows Use After Free in smtp_reset in certain situations that may be common for builds with OpenSSL.",
        "published_date": "2021-05-06T13:15:09.560",
        "last_modified": "2024-11-21T05:22:12.890",
        "cwe": [
          "CWE-416"
        ],
        "commits": {
          "vulnerable": "91de3e1952782fc0a4b893b3cef3c7d4ca1b098f",
          "fixed": "0b00e23df82af08ba04f482745bd7ddbff2da34b"
        },
        "extraction_date": "2025-08-31T15:04:27.158480",
        "extraction_status": "completed",
        "extraction_method": "improved"
      },
      "diff_check": {
        "has_differences": true,
        "vulnerable_files": 17,
        "fixed_files": 12,
        "vulnerability_patterns": 89,
        "pattern_breakdown": {
          "integer_overflow": 1,
          "null_pointer": 88
        },
        "reason": "Code differences found"
      },
      "project": "openssl",
      "cwe_id": "Unknown",
      "cwe_name": "Unknown"
    },
    {
      "cve_id": "CVE-2022-37434",
      "status": "passed",
      "reason": "Code differences found",
      "weaponization_score": 10.0,
      "is_critical": true,
      "is_weaponizable": true,
      "metadata": {
        "cve_id": "CVE-2022-37434",
        "project": "zlib",
        "vulnerability_type": "Buffer Overflow",
        "cvss_score": 9.8,
        "severity": "CRITICAL",
        "description": "zlib through 1.2.12 has a heap-based buffer over-read or buffer overflow in inflate in inflate.c via a large gzip header extra field. NOTE: only applications that call inflateGetHeader are affected. Some common applications bundle the affected zlib source code but may be unable to call inflateGetHeader (e.g., see the nodejs/node reference).",
        "published_date": "2022-08-05T07:15:07.240",
        "last_modified": "2025-05-30T20:15:30.030",
        "cwe": [
          "CWE-787",
          "CWE-120"
        ],
        "commits": {
          "vulnerable": "4bd9a71f3539b5ce47f0c67ab5e01f3196dc8ef9",
          "fixed": "7af6320ad78b390de42f414fabdc64dc6d67a5ea"
        },
        "extraction_date": "2025-08-31T15:04:30.613084",
        "extraction_status": "completed",
        "extraction_method": "improved"
      },
      "diff_check": {
        "has_differences": true,
        "vulnerable_files": 11,
        "fixed_files": 11,
        "vulnerability_patterns": 1591,
        "pattern_breakdown": {
          "use_after_free": 29,
          "integer_overflow": 286,
          "format_string": 12,
          "null_pointer": 1189,
          "sql_injection": 65,
          "buffer_overflow": 10
        },
        "reason": "Code differences found"
      },
      "project": "zlib",
      "cwe_id": "Unknown",
      "cwe_name": "Unknown"
    },
    {
      "cve_id": "CVE-2016-7167",
      "status": "passed",
      "reason": "Code differences found",
      "weaponization_score": 10.0,
      "is_critical": true,
      "is_weaponizable": true,
      "metadata": {
        "cve_id": "CVE-2016-7167",
        "project": "curl",
        "vulnerability_type": "Buffer Overflow",
        "cvss_score": 9.8,
        "severity": "CRITICAL",
        "description": "Multiple integer overflows in the (1) curl_escape, (2) curl_easy_escape, (3) curl_unescape, and (4) curl_easy_unescape functions in libcurl before 7.50.3 allow attackers to have unspecified impact via a string of length 0xffffffff, which triggers a heap-based buffer overflow.",
        "published_date": "2016-10-07T14:59:08.100",
        "last_modified": "2025-04-12T10:46:40.837",
        "cwe": [
          "CWE-190"
        ],
        "commits": {
          "vulnerable": "16ddcd6712f58894d30849bfcc0248919f1684ab",
          "fixed": "fa3baabbd81ab9f0aa50bc6335a3e315be0e3009"
        },
        "extraction_date": "2025-08-31T15:04:31.893454",
        "extraction_status": "completed",
        "extraction_method": "improved"
      },
      "diff_check": {
        "has_differences": true,
        "vulnerable_files": 13,
        "fixed_files": 13,
        "vulnerability_patterns": 2070,
        "pattern_breakdown": {
          "buffer_overflow": 6,
          "use_after_free": 80,
          "integer_overflow": 42,
          "format_string": 2,
          "null_pointer": 1934,
          "sql_injection": 6
        },
        "reason": "Code differences found"
      },
      "project": "curl",
      "cwe_id": "Unknown",
      "cwe_name": "Unknown"
    },
    {
      "cve_id": "CVE-2005-0490",
      "status": "passed",
      "reason": "Code differences found",
      "weaponization_score": 10.0,
      "is_critical": true,
      "is_weaponizable": true,
      "metadata": {
        "cve_id": "CVE-2005-0490",
        "project": "curl",
        "vulnerability_type": "Buffer Overflow",
        "cvss_score": 8.8,
        "severity": "HIGH",
        "description": "Multiple stack-based buffer overflows in libcURL and cURL 7.12.1, and possibly other versions, allow remote malicious web servers to execute arbitrary code via base64 encoded replies that exceed the intended buffer lengths when decoded, which is not properly handled by (1) the Curl_input_ntlm function in http_ntlm.c during NTLM authentication or (2) the Curl_krb_kauth and krb4_auth functions in krb4.c during Kerberos authentication.",
        "published_date": "2005-05-02T04:00:00.000",
        "last_modified": "2025-04-03T01:03:51.193",
        "cwe": [
          "CWE-131"
        ],
        "commits": {
          "vulnerable": "16ddcd6712f58894d30849bfcc0248919f1684ab",
          "fixed": "fa3baabbd81ab9f0aa50bc6335a3e315be0e3009"
        },
        "extraction_date": "2025-08-31T15:04:40.070669",
        "extraction_status": "completed",
        "extraction_method": "improved"
      },
      "diff_check": {
        "has_differences": true,
        "vulnerable_files": 13,
        "fixed_files": 13,
        "vulnerability_patterns": 2070,
        "pattern_breakdown": {
          "buffer_overflow": 6,
          "use_after_free": 80,
          "integer_overflow": 42,
          "format_string": 2,
          "null_pointer": 1934,
          "sql_injection": 6
        },
        "reason": "Code differences found"
      },
      "project": "curl",
      "cwe_id": "Unknown",
      "cwe_name": "Unknown"
    },
    {
      "cve_id": "CVE-2016-7134",
      "status": "passed",
      "reason": "Code differences found",
      "weaponization_score": 10.0,
      "is_critical": true,
      "is_weaponizable": true,
      "metadata": {
        "cve_id": "CVE-2016-7134",
        "project": "curl",
        "vulnerability_type": "Buffer Overflow",
        "cvss_score": 9.8,
        "severity": "CRITICAL",
        "description": "ext/curl/interface.c in PHP 7.x before 7.0.10 does not work around a libcurl integer overflow, which allows remote attackers to cause a denial of service (allocation error and heap-based buffer overflow) or possibly have unspecified other impact via a long string that is mishandled in a curl_escape call.",
        "published_date": "2016-09-12T01:59:12.803",
        "last_modified": "2025-04-12T10:46:40.837",
        "cwe": [
          "CWE-119"
        ],
        "commits": {
          "vulnerable": "16ddcd6712f58894d30849bfcc0248919f1684ab",
          "fixed": "fa3baabbd81ab9f0aa50bc6335a3e315be0e3009"
        },
        "extraction_date": "2025-08-31T15:04:31.460843",
        "extraction_status": "completed",
        "extraction_method": "improved"
      },
      "diff_check": {
        "has_differences": true,
        "vulnerable_files": 13,
        "fixed_files": 13,
        "vulnerability_patterns": 2070,
        "pattern_breakdown": {
          "buffer_overflow": 6,
          "use_after_free": 80,
          "integer_overflow": 42,
          "format_string": 2,
          "null_pointer": 1934,
          "sql_injection": 6
        },
        "reason": "Code differences found"
      },
      "project": "curl",
      "cwe_id": "Unknown",
      "cwe_name": "Unknown"
    },
    {
      "cve_id": "CVE-2023-45853",
      "status": "passed",
      "reason": "Code differences found",
      "weaponization_score": 10.0,
      "is_critical": true,
      "is_weaponizable": true,
      "metadata": {
        "cve_id": "CVE-2023-45853",
        "project": "zlib",
        "vulnerability_type": "Buffer Overflow",
        "cvss_score": 9.8,
        "severity": "CRITICAL",
        "description": "MiniZip in zlib through 1.3 has an integer overflow and resultant heap-based buffer overflow in zipOpenNewFileInZip4_64 via a long filename, comment, or extra field. NOTE: MiniZip is not a supported part of the zlib product. NOTE: pyminizip through 0.2.6 is also vulnerable because it bundles an affected zlib version, and exposes the applicable MiniZip code through its compress API.",
        "published_date": "2023-10-14T02:15:09.323",
        "last_modified": "2024-12-20T17:41:31.237",
        "cwe": [
          "CWE-190",
          "CWE-190"
        ],
        "commits": {
          "vulnerable": "4bd9a71f3539b5ce47f0c67ab5e01f3196dc8ef9",
          "fixed": "7af6320ad78b390de42f414fabdc64dc6d67a5ea"
        },
        "extraction_date": "2025-08-31T15:04:30.827934",
        "extraction_status": "completed",
        "extraction_method": "improved"
      },
      "diff_check": {
        "has_differences": true,
        "vulnerable_files": 11,
        "fixed_files": 11,
        "vulnerability_patterns": 1591,
        "pattern_breakdown": {
          "use_after_free": 29,
          "integer_overflow": 286,
          "format_string": 12,
          "null_pointer": 1189,
          "sql_injection": 65,
          "buffer_overflow": 10
        },
        "reason": "Code differences found"
      },
      "project": "zlib",
      "cwe_id": "Unknown",
      "cwe_name": "Unknown"
    }
  ]
}